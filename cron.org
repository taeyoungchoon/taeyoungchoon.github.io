* cron.allow and cron.deny

cron.allow first, if ok then ok, if not then nil

#+BEGIN_SRC 
[root@c75 ~]# cat /etc/cron.allow
jack
[root@c75 ~]# cat /etc/cron.deny
jack
[root@c75 ~]# su - jack
Last login: Tue Apr 30 21:07:00 KST 2019 on pts/0
[jack@c75 ~]$ crontab -l
* * * * * /usr/bin/date > /tmp/date.log
[jack@c75 ~]$ logout
[root@c75 ~]# su - raul
Last login: Tue Apr 30 21:07:15 KST 2019 on pts/0
[raul@c75 ~]$ crontab -l
You (raul) are not allowed to use this program (crontab)
See crontab(1) for more information
[raul@c75 ~]$
#+END_SRC

* name?

check out the wikipedia

* /var/log/cron
* /var/spool/cron/ 
* execute failure

- check PATH of 
- cat /etc/crontab
- read mail using mail command or you like or are using

* 600 server at 4am

kill some 'one' 

** using sleep and $RANDOM

*** chk

$ time sleep $(expr $RANDOM % 3)

real    0m0.004s
user    0m0.001s
sys     0m0.002s
$ time sleep $(expr $RANDOM % 3)

real    0m2.003s
user    0m0.000s
sys     0m0.002s
$ time sleep $(expr $RANDOM % 3)

real    0m2.004s
user    0m0.000s
sys     0m0.003s
$ time sleep $(expr $RANDOM % 3)

real    0m1.003s
user    0m0.000s
sys     0m0.003s

*** real one, add 10m (60s * 10)

10 4 * * * sleep $(expr $RANDOM \% 600); ~/bin/batch_job

*** site

- http://www.askbjoernhansen.com/2007/11/19/space_out_cronjobs.html

