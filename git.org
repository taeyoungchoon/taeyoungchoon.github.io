* versioning system developed by linux developer
* check my git is old ( good ) enough

#+BEGIN_SRC sh
sudo yum install git -y
git --version
#+END_SRC 

* if git old enough

#+BEGIN_SRC sh
cd /usr/local/src
sudo yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel -y
sudo yum install perl-ExtUtils-MakeMaker -y
sudo git clone https://github.com/msysgit/git.git
cd git
sudo make prefix=/usr/local all
sudo make prefix=/usr/local install
sudo rpm -e git perl-Git
sudo ln -s /usr/local/bin/git /usr/bin/git
# or add /usr/local/bin to PATH from .bash_profile
git --version
#+END_SRC 

* clone

#+BEGIN_SRC sh
cd
git clone https://github.com/taeyoungchoon/taeyoungchoon.github.io.git
cd taeyoungchoon.github.io
git status
#+END_SRC

* now

#+BEGIN_SRC sh
git clone https://github.com/taeyoungchoon/t-openstack.git
cd t-openstack
git config user.name "taeyoungchoon"
git config user.email "taeyoungchoon@gmail.com"
git config --global push.default simple
git config --global credential.helper store
git pull
#+END_SRC

#+BEGIN_SRC 
git push
Username for 'https://github.com': taeyoungchoon@gmail.com
Password for 'https://taeyoungchoon@gmail.com@github.com': N 
#+END_SRC

* init

#+BEGIN_SRC sh
git config user.name "taeyoungchoon"
git config user.email "taeyoungchoon@gmail.com"
git commit -m 'mod git the add bash'
git config --global push.default simple
git config --global credential.helper store
git push
#+END_SRC
  
* daily

#+BEGIN_SRC sh
git pull 
emacs foo.org
git status
git add foo.org
git commit -m "add foo.org"
git push
#+END_SRC

* suggest 
  
- auto aka background
  
* recon

almost init then type username then password

* case, warning: LF will be replaced by CRLF in abc.pl.

warning: LF will be replaced by CRLF in abc.pl.
The file will have its original line endings in your working directory.

* TODO git server

- [ ] git daemon
- github
- [ ] gitlab
- bitbucket
- using sshd only

** git server using git daemon, pure

- cd vm
  - vagrant up using make start 
- make
  - make start
  - stop
  - clean

* TODO git log

** flow

1. old (HEAD -> master, origin/master, origin/HEAD)
2. git commit
3. new (HEAD -> master)
   old (origin/master, origin/HEAD)
4. git push
5. new (HEAD -> master, origin/master, origin/HEAD)
   old nil
  
** log

#+BEGIN_SRC 
? git log --oneline -3
a3020f2 (HEAD -> master, origin/master, origin/HEAD) git log, parse
ecc1079 talk about git server
cf0d97c d

? git add git.org
? git commit -m t

? git log --oneline -3
1425093 (HEAD -> master) t
a3020f2 (origin/master, origin/HEAD) git log, parse
ecc1079 talk about git server

? git push

? git log --oneline -3
1425093 (HEAD -> master, origin/master, origin/HEAD) t
a3020f2 git log, parse
ecc1079 talk about git server
#+END_SRC

* DONE amend

해보니까 알겠다. 그럼 되는 거다.

1. git commit
2. git commit -m amend
