* TODO [0/3] sample

- [ ] https://gist.github.com/cainj13/3eebd69bc8fbe848f333c75dadf729d5
- [ ] http://www.roggeware.nl/mediawiki-1.24.1/index.php?title=User:Tom/RHCE_EX300
- [ ] https://websistent.com/rhce-exam-experience/

* TODO [0/1] REBOOT : server then client and sure about any

- [ ] iscsi, samba, nfs
- systemctl enable samba
- config well
- fstab with _netdev
- firewalld

* DONE tiling 2:1
  CLOSED: [2018-04-04 Wed 15:42]

- [ ] about firefox
- save file fail on hypervisor, ssh key file
  
* DONE /etc/hosts
  CLOSED: [2018-03-08 Thu 13:46]

- 172.28.128.100 server12.f.com server12
- 172.28.128.200 desktop12.f.com desktop12

* DONE mandb
  CLOSED: [2018-03-07 Wed 15:43]

- mandb
- man -k firewall

* DONE change root passwd
  CLOSED: [2018-03-07 Wed 15:21]

rd.break
mount -o remount,rw /sysroot
chroot /sysroot
passwd root
touch /.autorelabel
exit
exit

* DONE mask
  CLOSED: [2018-03-07 Wed 15:21]

- systemctl mask iptables ip6tables ebtables
- systemctl status iptables ip6tables ebtables

* DONE enable selinux
  CLOSED: [2018-03-07 Wed 15:22]

- getenforce
- /etc/selinux/config
- SELINUX=enforcing

* DONE gather dns using nslookup or using /etc/resolv.conf
  CLOSED: [2018-03-07 Wed 15:22]

- nslookkup
- cat /etc/resolv.conf

* DONE ipv4
  CLOSED: [2018-03-07 Wed 15:30]

- ip addr
- ifconfig
- ip route
- route -n
- nmcli con add con-name mynet type ethernet ifname eth0
- nmcli con mod mynet
  ipv4.method manual
  ipv4.addresses "192.168.33.100/24 192.168.33.1"
  ipv4.dns 8.8.8.8
  connection.autoconnect yes
- nmcil up mynet
- nmcli con delete "System eth0"
- nmcli con 

* DONE ipv6, need a sample ipv6 address
  CLOSED: [2018-04-04 Wed 15:26]

** server

- nmcli con mod mynet
  ipv6.method manual
  ipv6.addresses "2001:db8:1::1/64"

** client

- nmcli con mod mynet
  ipv6.method manual
  ipv6.addresses "2001:db8:1::2/64"
- ping6 -I eth1 2001:db8:1::1

* DONE teaming
  CLOSED: [2018-03-07 Wed 15:30]

- https://www.rootusers.com/how-to-configure-network-teaming-in-linux/
- [ ] man nmcli-examples | grep team | grep add
- [ ] man teamd.conf | grep activebackup

- nmcli con mod "System eth1" connection.autoconnect no
- nmcli con mod "System eth2" connection.autoconnect no
- nmcli con down "System eth1"
- nmcli con down "System eth2"

- nmcli con add con-name team0 type team ifname team0
- nmcli con mod team0
  ipv4.method manual
  ipv4.addresses "192.168.33.101/24"
  connection.autoconnect yes
  config '{"runner" : {"name" : "activebackup" }}'
- nmcli con add con-name team0-port0 type team-slave ifname eth1 master team0
- nmcli con add con-name team0-port1 type team-slave ifname eth2 master team0

- nmcli con down team0
- nmcli con
- nmcli con up team0-port0
- nmcli con up team0-port1
- nmcli con
- teamdctl team0 state

* DONE firewalld about zone
  CLOSED: [2018-04-04 Wed 17:12]

- systemctl status firewalld
- systemctl enable firewalld
- systemctl start firewalld
- systemctl status firewalld
- firewall-cmd --list-all

- firewall-cmd --get-zones
- firewall-cmd --get-default-zone
- firewall-cmd --get-active-zones

- firewall-cmd --set-default-zone=dmz
- firewall-cmd --add-source=172.28.128.0/24 --zone=work
- firewall-cmd --add-service=mysql --zone=work --permanent
- firewall-cmd --add-service=mysql --zone=work
- firewall-cmd --reload
- firewall-cmd --list-all
- cat /etc/firewalld/zones/work.xml

* DONE firewalld about forward
  CLOSED: [2018-04-04 Wed 17:12]

- yum reinstall firewalld
- man firewalld.richlanguage | grep to-port
- firewall-cmd --permanent --add-rich-rule="rule family=ipv4
  source address=192.168.33.0/24
  forward-port port=2222
  protocol=tcp
  to-port=22"
- firewall-cmd --reload
- firewall-cmd --list-all

* DONE authconfig-gtk for kerberos and more
  CLOSED: [2018-04-04 Wed 17:12]
* DONE krb5-workstation and more for nfs-secure-server, nil from c7.0
  CLOSED: [2018-03-08 Thu 22:41]
* DONE yum repository
  CLOSED: [2018-03-08 Thu 11:27]

- yum-config-manager --add-repo=http://ftp.daumkakao.com/centos/7/os/x86_64
- /etc/yum.repo.d
- gpgcheck=0
- yum repolist
- yum install lynx
- yum reinstall firewalld

* DONE yum and rpm basic
  CLOSED: [2018-03-08 Thu 11:27]

- rpm -qa | grep samba
- rpm -ql lvm2
- rpm -qf /sbin/lvs
- yum whatprovides ifconfig
- yum search mariadb
- yum install mariadb
- yum reinstall lvm2
- yum repolist
- yum list | grep cifs-utils

* DONE systemd and journalctl
  CLOSED: [2018-03-08 Thu 14:48]

- journalctl -f
- journalctl -u httpd

* DONE ip addr and more
  CLOSED: [2018-03-08 Thu 14:48]

- ip addr
- ip route
- ip neigh

* DONE selinux one
  CLOSED: [2018-03-08 Thu 14:48]

- semanage fcontext -l | grep httpd_sys_content_t
- semanage port -l | grep ssh
- semanage fcontext -a -t samba_share_t '/smbshare(/.*)?'
- restorecon -Rv /srv/www
- chcon -t httpd_sys_content_t /tmp/foo
- yum whatprovides sealer
- sealert -a /var/log/audit/audit.log

* DONE chmod, chown, setfacl, getfacl
  CLOSED: [2018-04-04 Wed 17:36]

- chmod 
- chown
- getfacl
- setfacl -m u:mary:rw /share

* DONE mariadb
  CLOSED: [2018-04-04 Wed 17:34]

- yum install mariadb-server mariadb
- systemctl status mariadb
- systemctl enable mariadb
- systemctl start mariadb
- systemctl status mariadb

- mysql_secure_installation
- skip-networking
- /etc/my.cnf

- firewall-cmd --permanent --add-service=mysql
- firewall-cmd --reload
- firewall-cmd --list-all

- ss -lntup  | grep 3306

- create user jack@'%' identified by 'redhat'
- [ ] grant all privileges on *.* to jack@'%'
- [ ] show grants for jack@'%'
- create database db;
- use db;
- create table tbl (name varchar(30), price integer);
- desc tbl;
- insert into tbl (name,price) values ("wine",300);
- insert into tbl (name,price) values ("coffee",200);
- insert into tbl values ("water",100);
- update tbl set price=250 where name="coffee";
- delete from tbl where name="water";
- select * from tbl;
- revoke all privileges on *.* from jack@'%';

* DONE mariadb join, count, sum, group by, how deep
  CLOSED: [2018-04-04 Wed 17:34]

* TODO [0/6] httpd

- yum install httpd httpd-manual mod_ssl mod_wsgi telnet lynx elinks curl -y
- systemctl status httpd
- systemctl enable httpd
- systemctl start httpd
- systemctl status httpd

- firewall-cmd --list-services
- firewall-cmd --permanent --add-service=http 
- firewall-cmd --permanent --add-service=https
- firewall-cmd --reload
- firewall-cmd --list-services

- telnet server12 80
- telnet server12 443

- curl localhost
- curl -k https://localhost

- lynx /usr/share/httpd/manual
- /etc/httpd/conf.d/vh.conf

<Directory /var/www/html/owndir>
order deny,allow
deny from all
allow from desktop12.f.com
</Directory>
  
<VirtualHost *:80>
DocumentRoot /var/www/html
ServerName server12.f.com
</Virtualhost>

<VirtualHost *:443>
DocumentRoot /var/www/html
ServerName server12.f.com
SSLEngine on
SSLCertificateFile /etc/pki/tls/certs/localhost.crt
SSLCertificateKeyFile /etc/pki/tls/private/localhost.key
#SSLCertificateChainFile /etc/pki/tls/certs/server-chain.crt
</VirtualHost>

<Directory /srv/www>
Require all granted
</Directory>
  
<VirtualHost *:80>
DocumentRoot /srv/www
ServerName portal.f.com
</Virtualhost>

- httpd -t
- httpd -S
- systemctl status httpd
- systemctl restart httpd
- systemctl status httpd

- curl http://server12
- curl http://server12/owndir/
- curl -k https://server12

- cd /etc/pki/tls/certs
- curl -O
- chmod 600 *.crt

- cd /etc/pki/tls/private/
- curl -O
- chmod 600 *.key

- ls -lZ /var/www
- mkdir /srv/www
- semanage fcontext -a -t httpd_sys_content_t '/srv/www(/.*)?'
- restorecon -Rv /srv/www

* TODO [0/1] cgi, wsgi
  CLOSED: [2018-04-05 Thu 14:46]

- [ ] vi /usr/share/doc/mod_wsgi-3.4/README
- vh.conf

<Directory /srv/vh2/www/bin>
require all granted
order deny,allow
deny from all
allow from all
</Directory>

<VirtualHost *:80>
servername vh2.com
documentroot /srv/vh2/www

WSGIScriptAlias /myapp /srv/vh2/www/myapp.wsgi
WSGIScriptAlias /bin/ /srv/vh2/www/bin/
</VirtualHost>

- myapp.wsgi

def application(environ, start_response):
    status = '200 OK'
    output =        'Hello World!'

    response_headers = [('Content-type', 'text/plain'),
                        ('Content-Length', str(len(output)))]
    start_response(status, response_headers)

    return [output]

* TODO [0/1] nfs

- systemctl status nfs-server
- systemctl enable nfs-server
- systemctl start nfs-server
- systemctl status nfs-server

- mkdir /nfsshare
- [ ] chown, chmod, chgrp, setfacl

- /etc/exports
- exportfs -rv

- firewall-cmd --permanent --add-service=nfs
- firewall-cmd --permanent --add-service=rpc-bind
- firewall-cmd --permanent --add-service=mountd

- mount -t nfs server12:/nfsshare /mnt/nfsshare

- server12:/nfsshare /mnt/nfsshare nfs defaults,_netdev 0 0

* TODO [0/5] nfs but secure, nfs-secure-server only centos 7.0

- /etc/sysconfig/nfs
- "-V 4.2"
- [ ] systemctl status nfs-secure-server
- [ ] curl -O to download keytab file

- [ ] curl -O to download keytab file
- [ ] systemctl status nfs-server

- [ ] nfs-secure
- mount -t nfs -o sec=krb5p,vers=4.2 server12:/nfsshare /mnt/nfsshare

- server12:/nfsshare /mnt/nfsshare nfs defaults,sec=krb5p,_netdev 0 0

* DONE [0/8] samba
  CLOSED: [2018-04-05 Thu 14:17]

- yum install samba samba-client cifs-utils -y
- systemctl status smb nmb
- systemctl enable smb nmb
- systemctl start smb nmb
- systemctl status smb nmb

- firewall-cmd --permanent --add-service=samba
- firewall-cmd --reload
- firewall-cmd --list-services

- groupadd sales
- useradd -s /sbin/nologin jack
- useradd -s /sbin/nologin raul
- useradd -s /sbin/nologin mary
- usermod -aG sales jack
- usermod -aG sales raul
- [ ] groupmems -g sales -l
- smbpasswd -a jack
- smbpasswd -a raul
- smbpasswd -a mary
- pdbedit -L

- mkdir /smbshare
- chgrp sales /smbshare
- [ ] chmod 2777 /smbshare
- [ ] semanage fcontext -a -t samba_share_t '/smbshare(/.*)?'
- restorecon -Rv /smbshare

- /etc/samba/smb.conf
  [smbshare]
  path = /smbshare
  valid users = +sales nerd 
  write list = +sales
- testparm
- systemctl restart smb nmb

- smbclient -L server12.f.com -U jack
- smbclient //server12.f.com/smbshare -U jack

- /etc/passwd.samba
  username=jack
  password=redhat
- chmod 600 /etc/passwd.samba
- [ ] yum install cifs-utils -y
- mount //server12.f.com/smbshare /mnt/smbshare
  -o credentials=/etc/passwd.samba
- [ ] mount //server12.f.com/smbshare /mnt/smbshare
  -o credentials=/etc/passwd.samba,sec=ntlmssp,multiuser 
- [ ] cifscreds add -u jack server12
- [ ] keyctl

- [ ] cat >> /etc/fstab
- //server12/smbshare /mnt/smbshare cifs credentials=/etc/passwd.samba,sec=ntlmssp,multiuser 0 0
- mount /mnt/smbshare
- df |  grep smbshare

* TODO [0/5] postfix but null client

- systemctl status postfix
- systemctl enable postfix
- systemctl start postfix
- postconf
- postconf -n
- postconf | grep ^my
- postconf -e "mydestination="
- postconf -e "myorigin=example.com"
- postconf -e "mynetworks=127.0.0.0/8, [::1]/128"
- [ ] postconf -e "inet_interfaces=loopback-only"
- [ ] postconf -e "relayhost=[server12.example.com]"
- [ ] postconf -e "local_transport=error: local delivery disabled"
- local_transport = error:local mail delivery is disabled
  man or somewhere or command
- systemcl restart postfix
- [ ] mail -s "test" jack@desktop12.f.com
- [ ] mutt -f imaps://imap12.f.com

** local_transport

- You redefine the "local_transport" setting in main.cf.
- local_transport: determine how email addressed to $mydestination should be delivered. By default, set to local:$myhostname, which uses the local mail delivery agent to deliver incoming mail to the local message store in /var/spool/mail.
- local_transport = virtual
- local_transport (default: local:$myhostname)
This is the default for final delivery to domains listed with mydestination, and for [ipaddress] destinations  that  match  $inet_interfaces or $proxy_interfaces. The default nexthop destination is the MTA hostname.
- [ ] man transport
- The error mailer can be used to bounce mail:
- .example.com     error:mail for *.example.com is not deliverable
- local_transport = local:$myhostname
- [ ] local_transport = error: local delivery disabled
- man 8 local
- man error
- The local_transport parameter enforces the fact that no email is delivered locally, so email to root@firewall.domain.com will be rejected with the error that local mail delivery is disabled. 
- local_transport = error:local mail delivery is disabled on this machine
- local_transport = error:local mail delivery is disabled
- [ ] local_transport = error:xxx
- /etc/postfix/transport
- /etc/postfix/main.cf

* DONE [1/1] iscsi.server.pre
  CLOSED: [2018-04-05 Thu 15:16]

- fdisk -l | grep Disk
- lsblk
- dmesg
- mount

- yum install gdisk -y
- +500M
- 8e00
- partprobe

- pvcreate /dev/sdb1
- vgcreate vg_storage /dev/sdb1
- vgdisplay vg_storage | grep PE
- lvcreate -n lv_media -l 40 vg_storage
- lvcreate -n lv_data -L 40M vg_storage
- lvdisplay
- lvs

- [X] and MiB (1MiB -eq 1048576 but 1MB -eq 1000000)

* TODO [2/4] iscsi.server
  CLOSED: [2018-04-05 Thu 15:43]

- yum install targetcli -y
- systemctl status target
- systemctl enable target
- systemctl start target
- systemctl status target

- firewall-cmd --permanent --add-port=3260/tcp
- firewall-cmd --reload
- firewall-cmd --list-ports

- target
- cd /backstores/block
- [ ] create i_image /dev/vg_storage/lv_media
- cd /iscsi
- [X] create iqn.2018-03.com.f:server12
- cd iqn.2018-03.com.f:server12/tpg1
- ls
- cd acls
- [X] create iqn.2018-03.com.f:desktop12
- cd ../luns
- create /backstores/block/i_image
- cd ../portals
- [ ] create 172.28.128.100:3260
- exit
- /etc/target/saveconfig.json
- systemctl restart target

* TODO [1/3] iscsi.client
  CLOSED: [2018-04-05 Thu 15:43]

- yum install iscsi-initiator-utils -y
- /etc/iscsi/initiatorname.iscsi
- [X] InitiatorName=iqn.2018-03.com.f:desktop12
- systemctl status iscsi
- systemctl start iscsi
- systemctl status iscsi
- man iscsiadm | grep discoverydb
- iscsiadm -m discoverydb -t st -p server12.com.f --discover
- man iscsiadm | grep node
- [ ] iscsiadm -m node -T iqn.2018-03.com.f:server12 -p server12.com.f -l
- [ ] systemctl restart iscsid
- dmesg
- fdisk -l | grep Disk
- yum install gdisk -y
- gdisk /dev/sdc
- partprobe
- mkfs.xfs /dev/sdc1
- blkid
- /etc/fstab
- UUID=ef1859f9-33dc-4df6-abe5-83baecb614f1 xfs defaults,_netdev 0 0
- iscsiadm -m session
- iscsiadm -m session -P 0
- iscsiadm -m session -P 1
- iscsiadm -m session -P 2
- iscsiadm -m session -P 3

* TODO [0/1] bash: case, for then if
  CLOSED: [2018-04-04 Wed 17:35]

- case

#+BEGIN_SRC sh
  case $1 in
      ping)
          echo pong
          ;;
      pong)
          echo ping
          ;;
      ,*)
          echo nil
          ;;
  esac

#+END_SRC

- for

#+BEGIN_SRC sh
  for user in `cat list`;
  do
      echo $user
  done
#+END_SRC

- [ ] if

#+BEGIN_SRC sh
  if [ -e /etc/passwd ];
  then
      echo exist
  fi
#+END_SRC

* DONE dns caching, ntp, to do or not have to do?

