* TODO [2021-11-22 월] testing on wsl

https://containerlab.srlinux.dev/quickstart/#fn:2

[2021-11-22 월] 요즘 virtualbox가 동작을 안해서 고생하고 있다.

https://containerlab.srlinux.dev/install/
say about wsl

install docker-ce

curl -L https://gist.githubusercontent.com/hellt/e8095c1719a3ea0051165ff282d2b62a/raw/1dffb71d0495bb2be953c489cd06a25656d974a4/docker-install.sh | \
bash

THEN

bash -c "$(curl -sL https://get-clab.srlinux.dev)"
mkdir ~/clab-quickstart
cd ~/clab-quickstart
cp /etc/containerlab/lab-examples/srlceos01/* .
cp /mnt/t/t-archive/2021.11.05\ cloudeos\ from\ arista\ korea/cEOS-lab-4.27.0F.tar .
docker import cEOS-lab-4.27.0F.tar ceos:4.27.0F
docker images
sudo containerlab deploy --topo srlceos01.clab.yml

CLI

ssh admin@172.20.20.3
docker exec -it <name> sr_cli
docker exec -it <name> Cli

CLEAR

containerlab destroy --topo srlceos01.clab.yml

* TODO [2022-05-24 화] then again on debian 22.04 LTS

# download srlinux using docker, simply
docker pull ghcr.io/nokia/srlinux
docker images

# dig in later with below strings
# 
# https://qiita.com/h9803660/items/2d9ab958e93a361cff71
# docker create --name=ceos --privileged -p 443:443 -e CEOS=1 -e container=docker -e EOS_PLATFORM=ceoslab -e SKIP_ZEROTOUCH_BARRIER_IN_SYSDBINIT=1 -e ETBA=1 -e INTFTYPE=eth -i -t ceos:latest /sbin/init
# docker network create net1
# docker network create net2
# docker network connect net1 ceos
# docker network connect net2 ceos
# docker start ceos
# docker exec -it ceos Cli

# download ceos image from arista.com, manually
#   arista.com > Software Download > EOS > cEOS-lab > EOS-4.27.4M > cEOS-lab-4.27.4M.tar.xz
docker import cEOS-lab-4.27.4M.tar.xz ceos:4.27.4M
docker image ls

# make containerlab using example, stream edit cfg based on ceos image
mkdir ~/clab-quickstart
cd ~/clab-quickstart
cp -a /etc/containerlab/lab-examples/srlceos01/* .
cat /etc/containerlab/lab-examples/srlceos01/srlceos01.clab.yml | sed 's/4.25.0F/4.27.4M/' > srlceos01.clab.yml
diff /etc/containerlab/lab-examples/srlceos01/srlceos01.clab.yml srlceos01.clab.yml 

# start
sudo containerlab deploy  --topo srlceos01.clab.yml

# test
echo test
docker exec -it clab-srlceos01-srl1 sr_cli
docker exec -it clab-srlceos01-ceos Cli

# stop
sudo containerlab destroy --topo srlceos01.clab.yml 

* DONE [2024-02-09 Fri] then again on arm
CLOSED: [2024-02-09 Fri 01:08]

#+begin_example
#+end_example

#+begin_src
  sudo containerlab destroy --topo srlceos01.clab.yml
  sudo containerlab deploy

  sudo docker ps
  sudo docker exec -it cb69d3430d8c bash
  bash# Cli
  ceos1>en
  ceos1#sh ip int br
#+end_src

#+begin_example
  debian@debian:~/lab$ time sudo containerlab deploy
  INFO[0000] Containerlab v0.50.0 started
  INFO[0000] Parsing & checking topology file: srlceos01.clab.yml
  INFO[0000] Creating docker network: Name="clab", IPv4Subnet="172.20.20.0/24", IPv6Subnet="2001:172:20:20::/64", MTU='ל'
  INFO[0001] Creating lab directory: /home/debian/lab/clab-srlceos01
  INFO[0001] Creating container: "ceos2"
  INFO[0001] Creating container: "ceos1"
  INFO[0003] Creating link: ceos1:eth1 <--> ceos2:eth1
  INFO[0003] Running postdeploy actions for Arista cEOS 'ceos2' node
  INFO[0003] Running postdeploy actions for Arista cEOS 'ceos1' node
  INFO[0440] Adding containerlab host entries to /etc/hosts file
  INFO[0440] Adding ssh config for containerlab nodes
  +---+----------------------+--------------+--------------------+-------------+---------+----------------+----------------------+
  | # |         Name         | Container ID |       Image        |    Kind     |  State  |  IPv4 Address  |     IPv6 Address     |
  +---+----------------------+--------------+--------------------+-------------+---------+----------------+----------------------+
  | 1 | clab-srlceos01-ceos1 | fe21d0930494 | arista/ceos:latest | arista_ceos | running | 172.20.20.2/24 | 2001:172:20:20::2/64 |
  | 2 | clab-srlceos01-ceos2 | a345d6733c0c | arista/ceos:latest | arista_ceos | running | 172.20.20.3/24 | 2001:172:20:20::3/64 |
  +---+----------------------+--------------+--------------------+-------------+---------+----------------+----------------------+

  real	7m20.711s
  user	0m0.021s
  sys	0m0.112s
#+end_example

#+begin_example
  debian@debian:~/lab$ ssh admin@172.20.20.2
  ssh: connect to host 172.20.20.2 port 22: Connection refused
  debian@debian:~/lab$ ssh admin@172.20.20.3
  (admin@172.20.20.3) Password:
  Last login: Thu Feb  8 16:03:49 2024 from 172.20.20.1
  ceos2>en
  ceos2#sh ip int br
										Address
  Interface         IP Address           Status       Protocol           MTU    Owner
  ----------------- -------------------- ------------ -------------- ---------- -------
  Management0       172.20.20.3/24       up           up                1500

  ceos2#quit
  Connection to 172.20.20.3 closed.
  debian@debian:~/lab$
#+end_example

#+begin_example
  debian@debian:~/lab$ sudo containerlab inspect
  INFO[0000] Parsing & checking topology file: srlceos01.clab.yml
  +---+----------------------+--------------+--------------------+-------------+---------+----------------+----------------------+
  | # |         Name         | Container ID |       Image        |    Kind     |  State  |  IPv4 Address  |     IPv6 Address     |
  +---+----------------------+--------------+--------------------+-------------+---------+----------------+----------------------+
  | 1 | clab-srlceos01-ceos1 | fe21d0930494 | arista/ceos:latest | arista_ceos | running | 172.20.20.2/24 | 2001:172:20:20::2/64 |
  | 2 | clab-srlceos01-ceos2 | a345d6733c0c | arista/ceos:latest | arista_ceos | running | 172.20.20.3/24 | 2001:172:20:20::3/64 |
  +---+----------------------+--------------+--------------------+-------------+---------+----------------+----------------------+
#+end_example

* TODO 172.20.20.0/24 to 192.168.64.0/24
* TODO containerlab with tmux

1. cd clab
2. sudo clab deploy
3. do something   
4. sudo clab destroy --cleanup

** to test vrrp and more

- [X] routed port
  - no switchport
- [X] int vlan
  - [X] access vs trunk
    - switchport mode trunk
- [X] vrrp
  - [X] ip routing

#+begin_example
  debian@debian:~/lab$ cat srlceos01.clab.yml
  # topology documentation: http://containerlab.dev/lab-examples/srl-ceos/
  name: srlceos01

  topology:
    kinds:
      ceos1:
	env:
	  CLAB_MGMT_VRF: MGMT
      ceos2:
	env:
	  CLAB_MGMT_VRF: MGMT
      ceos3:
	env:
	  CLAB_MGMT_VRF: MGMT
    nodes:
      ceos1:
	kind: arista_ceos
	image: arista/ceos:latest
      ceos2:
	kind: arista_ceos
	image: arista/ceos:latest
      ceos3:
	kind: arista_ceos
	image: arista/ceos:latest

    links:
      - endpoints: ["ceos1:eth1", "ceos2:eth1"]
      - endpoints: ["ceos1:eth2", "ceos3:eth1"]
      - endpoints: ["ceos2:eth2", "ceos3:eth2"]
#+end_example

** tmux

#+begin_example
C-b c
C-b c
C-b c
C-b 1 then ssh admin@172.20.20.4
C-b 2 then ssh admin@172.20.20.3
C-b 3 then ssh admin@172.20.20.2
#+end_example

