* TODO note

- [2021-11-08 월] vagrant에 대한 의존성이 높다는 것은 좋은 것인가? vagrant up jo는 실패했다. virtualbox의 ui에서 시도하면 잘 동작한다. 

#+BEGIN_SRC emacs-lisp
(vagrant virtualbox pm) 
(vm-helper vm pm)
#+END_SRC

* in the real world on windows 10

** problem on windows 10, WARNING: UNPROTECTED PRIVATE KEY FILE

>vagrant ssh server12
Permission denied

>vagrant ssh server12 -- -vvv
WARNING: UNPROTECTED PRIVATE KEY FILE

so what I've done

vagrant ssh-config > ssh.conf
ssh -F /cygdrive/d/vm/ssh.conf server12
ssh -F /cygdrive/d/vm/ssh.conf desktop12

* files

- Vagrantfile
- bootstrap.sh

* dic, street persion
* history
* init

vagrant init oxdev/debian-wheezy-x64

* up

$ vagrant up

Bringing machine 'default' up with 'virtualbox' provider...
==> default: Box 'oxdev/debian-wheezy-x64' could not be found. Attempting to find and install...
    default: Box Provider: virtualbox
    default: Box Version: >= 0
==> default: Loading metadata for box 'oxdev/debian-wheezy-x64'
    default: URL: https://atlas.hashicorp.com/oxdev/debian-wheezy-x64
==> default: Adding box 'oxdev/debian-wheezy-x64' (v7.8) for provider: virtualbox
    default: Downloading: https://atlas.hashicorp.com/oxdev/boxes/debian-wheezy-x64/versions/7.8/providers/virtualbox.box
==> default: Successfully added box 'oxdev/debian-wheezy-x64' (v7.8) for 'virtualbox'!
==> default: Importing base box 'oxdev/debian-wheezy-x64'...
==> default: Matching MAC address for NAT networking...
==> default: Checking if box 'oxdev/debian-wheezy-x64' is up to date...
==> default: Setting the name of the VM: vagrant_default_1475990074062_52733
==> default: Clearing any previously set network interfaces...
==> default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
==> default: Forwarding ports...
    default: 22 (guest) => 2222 (host) (adapter 1)
==> default: Booting VM...
==> default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Warning: Remote connection disconnect. Retrying...
    default: 
    default: Vagrant insecure key detected. Vagrant will automatically replace
    default: this with a newly generated keypair for better security.
    default: 
    default: Inserting generated public key within guest...
    default: Removing insecure key from the guest if it's present...
    default: Key inserted! Disconnecting and reconnecting using new SSH key...
==> default: Machine booted and ready!
==> default: Checking for guest additions in VM...
    default: The guest additions on this VM do not match the installed version of
    default: VirtualBox! In most cases this is fine, but in rare cases it can
    default: prevent things such as shared folders from working properly. If you see
    default: shared folder errors, please make sure the guest additions within the
    default: virtual machine match the version of VirtualBox you have installed on
    default: your host and reload your VM.
    default: 
    default: Guest Additions Version: 4.3.28
    default: VirtualBox Version: 5.0
==> default: Mounting shared folders...
    default: /vagrant => /Users/dareshare/vagrant
$ 

* ssh

$ vagrant ssh
Linux vagrant-debian-wheezy-x64 3.2.0-4-amd64 #1 SMP Debian 3.2.68-1+deb7u1 x86_64

The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
Last login: Tue Jun  2 11:44:41 2015
vagrant@vagrant-debian-wheezy-x64:~$

* halt, status, provision

$ vagrant halt
==> default: Attempting graceful shutdown of VM...

$ vagrant status
Current machine states:

default                   poweroff (virtualbox)

The VM is powered off. To restart the VM, simply run `vagrant up`
$ vagrant provision
==> default: VM is not currently running. Please, first bring it up with `vagrant up` then run this command.
$

* up again

$ vagrant up
Bringing machine 'default' up with 'virtualbox' provider...
==> default: Checking if box 'oxdev/debian-wheezy-x64' is up to date...
==> default: Clearing any previously set forwarded ports...
==> default: Clearing any previously set network interfaces...
==> default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
==> default: Forwarding ports...
    default: 22 (guest) => 2222 (host) (adapter 1)
==> default: Booting VM...
==> default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Warning: Remote connection disconnect. Retrying...
==> default: Machine booted and ready!
==> default: Checking for guest additions in VM...
    default: The guest additions on this VM do not match the installed version of
    default: VirtualBox! In most cases this is fine, but in rare cases it can
    default: prevent things such as shared folders from working properly. If you see
    default: shared folder errors, please make sure the guest additions within the
    default: virtual machine match the version of VirtualBox you have installed on
    default: your host and reload your VM.
    default: 
    default: Guest Additions Version: 4.3.28
    default: VirtualBox Version: 5.0
==> default: Mounting shared folders...
    default: /vagrant => /Users/dareshare/vagrant
==> default: Machine already provisioned. Run `vagrant provision` or use the `--provision`
==> default: flag to force provisioning. Provisioners marked to run always will still run.

* status, provision

$ vagrant status
Current machine states:

default                   running (virtualbox)

The VM is running. To stop this VM, you can run `vagrant halt` to
shut it down forcefully, or you can run `vagrant suspend` to simply
suspend the virtual machine. In either case, to restart it again,
simply run `vagrant up`.
$ vagrant provision

* rdp

$ vagrant rdp
==> default: Detecting RDP info...
RDP connection information for this machine could not be
detected. This is typically caused when we can't find the IP
or port to connect to for RDP. Please verify you're forwarding
an RDP port and that your machine is accessible.

* box list

$ vagrant box list
oxdev/debian-wheezy-x64 (virtualbox, 7.8)
$ vagrant box outdated
Checking if box 'oxdev/debian-wheezy-x64' is up to date...
$ vagrant box update
==> default: Checking for updates to 'oxdev/debian-wheezy-x64'
    default: Latest installed version: 7.8
    default: Version constraints: 
    default: Provider: virtualbox
==> default: Box 'oxdev/debian-wheezy-x64' (v7.8) is running the latest version.
$ 

* (ps VBoxHeadless VBoxManage)

$ ps -ef | grep -i vbox
  501  2301     1   0  4:00PM ??         0:02.57 /Applications/VirtualBox.app/Contents/MacOS/VBoxXPCOMIPCD
  501  2303     1   0  4:00PM ??         0:04.69 /Applications/VirtualBox.app/Contents/MacOS/VBoxSVC --auto-shutdown
  501  2338  2303   0  4:00PM ??         0:40.49 /Applications/VirtualBox.app/Contents/MacOS/VBoxHeadless --comment vagrant_default_1475990074062_52733 --startvm 5b4873f6-86b8-4db1-b50d-c76794b1ff4a --vrde config
  501  2396  2297   0  4:01PM ttys001    0:00.08 /Applications/VirtualBox.app/Contents/MacOS/VBoxManage showvminfo 5b4873f6-86b8-4db1-b50d-c76794b1ff4a --machinereadable
  501  2397  2297   0  4:01PM ttys001    0:00.07 /Applications/VirtualBox.app/Contents/MacOS/VBoxManage showvminfo 5b4873f6-86b8-4db1-b50d-c76794b1ff4a --machinereadable

* global-status, ssh-config, port

$ vagrant global-status
id       name    provider   state   directory                           
------------------------------------------------------------------------
bfceac4  default virtualbox running /Users/dareshare/vagrant            
 
The above shows information about all known Vagrant environments
on this machine. This data is cached and may not be completely
up-to-date. To interact with any of the machines, you can go to
that directory and run Vagrant, or you can use the ID directly
with Vagrant commands from any directory. For example:
"vagrant destroy 1a2b3c4d"

$ vagrant ssh-config
Host default
  HostName 127.0.0.1
  User vagrant
  Port 2222
  UserKnownHostsFile /dev/null
  StrictHostKeyChecking no
  PasswordAuthentication no
  IdentityFile /Users/dareshare/vagrant/.vagrant/machines/default/virtualbox/private_key
  IdentitiesOnly yes
  LogLevel FATAL

$ vagrant port
The forwarded ports for the machine are listed below. Please note that
these values may differ from values configured in the Vagrantfile if the
provider supports automatic port collision detection and resolution.

    22 (guest) => 2222 (host)

* login

$ vagrant login
In a moment we will ask for your username and password to HashiCorp's
Atlas. After authenticating, we will store an access token locally on
disk. Your login details will be transmitted over a secure connection, and
are never stored on disk locally.

If you do not have an Atlas account, sign up at
https://atlas.hashicorp.com.

Atlas Username: 
Password (will be hidden): 
Invalid username or password. Please try again.
$ 

* box add hashicorp/precise64

$ vagrant box add hashicorp/precise64
==> box: Loading metadata for box 'hashicorp/precise64'
    box: URL: https://atlas.hashicorp.com/hashicorp/precise64
This box can work with multiple providers! The providers that it
can work with are listed below. Please review the list and choose
the provider you will be working with.

1) hyperv
2) virtualbox
3) vmware_fusion

Enter your choice: 2
==> box: Adding box 'hashicorp/precise64' (v1.1.0) for provider: virtualbox
    box: Downloading: https://atlas.hashicorp.com/hashicorp/boxes/precise64/versions/1.1.0/providers/virtualbox.box
==> box: Successfully added box 'hashicorp/precise64' (v1.1.0) for 'virtualbox'!
$ 

* status, destroy 

$ vagrant status
Current machine states:

default                   running (virtualbox)

The VM is running. To stop this VM, you can run `vagrant halt` to
shut it down forcefully, or you can run `vagrant suspend` to simply
suspend the virtual machine. In either case, to restart it again,
simply run `vagrant up`.
$ vagrant destroy
    default: Are you sure you want to destroy the 'default' VM? [y/N] y
==> default: Forcing shutdown of VM...
==> default: Destroying VM and associated drives...
$ 

* init, up

$ vagrant init oxdev/debian-wheezy-x64
A `Vagrantfile` has been placed in this directory. You are now
ready to `vagrant up` your first virtual environment! Please read
the comments in the Vagrantfile as well as documentation on
`vagrantup.com` for more information on using Vagrant.
$ cat Vagrantfile | grep config
# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  config.vm.box = "oxdev/debian-wheezy-x64"
  # config.vm.box_check_update = false
  # config.vm.network "forwarded_port", guest: 80, host: 8080
  # config.vm.network "private_network", ip: "192.168.33.10"
  # config.vm.network "public_network"
  # config.vm.synced_folder "../data", "/vagrant_data"
  # Provider-specific configuration so you can fine-tune various
  # config.vm.provider "virtualbox" do |vb|
  # config.push.define "atlas" do |push|
  # config.vm.provision "shell", inline: <<-SHELL
$ vagrant up
Bringing machine 'default' up with 'virtualbox' provider...
==> default: Importing base box 'oxdev/debian-wheezy-x64'...
==> default: Matching MAC address for NAT networking...
==> default: Checking if box 'oxdev/debian-wheezy-x64' is up to date...
==> default: Setting the name of the VM: vagrant_default_1476017814447_82854
==> default: Clearing any previously set network interfaces...
==> default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
==> default: Forwarding ports...
    default: 22 (guest) => 2222 (host) (adapter 1)
==> default: Booting VM...
==> default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Warning: Remote connection disconnect. Retrying...
    default: Warning: Remote connection disconnect. Retrying...
    default: 
    default: Vagrant insecure key detected. Vagrant will automatically replace
    default: this with a newly generated keypair for better security.
    default: 
    default: Inserting generated public key within guest...
    default: Removing insecure key from the guest if it's present...
    default: Key inserted! Disconnecting and reconnecting using new SSH key...
==> default: Machine booted and ready!
==> default: Checking for guest additions in VM...
    default: The guest additions on this VM do not match the installed version of
    default: VirtualBox! In most cases this is fine, but in rare cases it can
    default: prevent things such as shared folders from working properly. If you see
    default: shared folder errors, please make sure the guest additions within the
    default: virtual machine match the version of VirtualBox you have installed on
    default: your host and reload your VM.
    default: 
    default: Guest Additions Version: 4.3.28
    default: VirtualBox Version: 5.0
==> default: Mounting shared folders...
    default: /vagrant => /Users/dareshare/vagrant
$ vagrant ssh "uname -a"
The machine with the name 'uname -a' was not found configured for
this Vagrant environment.
$ vagrant ssh 
Linux vagrant-debian-wheezy-x64 3.2.0-4-amd64 #1 SMP Debian 3.2.68-1+deb7u1 x86_64

The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
Last login: Tue Jun  2 11:44:41 2015
vagrant@vagrant-debian-wheezy-x64:~$ uptime
 08:58:45 up 1 min,  1 user,  load average: 0.58, 0.32, 0.13
vagrant@vagrant-debian-wheezy-x64:~$ logout
Connection to 127.0.0.1 closed.
$ 

* plugin

$ vagrant plugin install
This command was not invoked properly. The help for this command is
available below.

Usage: vagrant plugin install <name>... [-h]

        --entry-point NAME           The name of the entry point file for loading the plugin.
        --plugin-prerelease          Allow prerelease versions of this plugin.
        --plugin-clean-sources       Remove all plugin sources defined so far (including defaults)
        --plugin-source PLUGIN_SOURCE
                                     Add a RubyGems repository source
        --plugin-version PLUGIN_VERSION
                                     Install a specific version of the plugin
        --verbose                    Enable verbose output for plugin installation
    -h, --help                       Print this help

* package

$ ps -ef | grep -i virtual
  501  5330     1   0  9:56PM ??         0:05.66 /Applications/VirtualBox.app/Contents/MacOS/VBoxXPCOMIPCD
  501  5332     1   0  9:56PM ??         1:38.73 /Applications/VirtualBox.app/Contents/MacOS/VBoxSVC --auto-shutdown
  501  5534  5499   0 10:00PM ttys000    0:00.53 /Applications/VirtualBox.app/Contents/MacOS/VBoxManage export 7cb30c23-cf75-4d9c-a2fa-355023aeaa2f --output /Users/dareshare/.vagrant.d/tmp/vagrant-package-20161009-5499-je9y24/box.ovf


$ ps -ef | grep -i vag
  501  5498  5193   0 10:00PM ttys000    0:00.01 vagrant package
  501  5499  5498   0 10:00PM ttys000    0:07.41 ruby /opt/vagrant/embedded/gems/gems/vagrant-1.8.6/bin/vagrant package
  501  5552  5499   0 10:02PM ttys000    0:22.21 /opt/vagrant/embedded/bin/bsdtar -czf /Users/dareshare/vagrant/package.box ./box-disk1.vmdk ./box.ovf ./vagrant_private_key ./Vagrantfile


$ vagrant package
==> default: Attempting graceful shutdown of VM...
==> default: Clearing any previously set forwarded ports...
==> default: Exporting VM...
==> default: Compressing package to: /Users/dareshare/vagrant/package.box

$ vagrant status
Current machine states:

default                   poweroff (virtualbox)

The VM is powered off. To restart the VM, simply run `vagrant up`
$ 


$ pwd
/Users/dareshare/vagrant
$ ls -al
total 627672
drwxr-xr-x    5 dareshare  staff        170 Oct  9 22:02 .
drwxr-xr-x@ 107 dareshare  staff       3638 Oct  9 21:59 ..
drwxr-xr-x    3 dareshare  staff        102 Oct  9 00:18 .vagrant
-rw-r--r--    1 dareshare  staff       3027 Oct  9 21:56 Vagrantfile
-rw-r--r--    1 dareshare  staff  321362286 Oct  9 22:03 package.box
$ 

* TODO case : vagrant@127.0.0.1's password:

#+BEGIN_SRC 
    jo: Vagrant insecure key detected. Vagrant will automatically replace
    jo: this with a newly generated keypair for better security.
    jo:
    jo: Inserting generated public key within guest...
    jo: Removing insecure key from the guest if it's present...
    jo: Key inserted! Disconnecting and reconnecting using new SSH key...
#+END_SRC

#+BEGIN_SRC 
[vagrant@jo ~]$ ip -br -4 a
lo               UNKNOWN        127.0.0.1/8
eth0             UP             10.0.2.15/24
eth1             UP             172.20.99.101/24
#+END_SRC

#+BEGIN_SRC 
$ ssh vagrant@10.0.2.15
#+END_SRC

#+BEGIN_SRC 
$ ssh -v -i .vagrant/machines/jo/virtualbox/private_key vagrant@10.0.2.15
OpenSSH_for_Windows_8.1p1, LibreSSL 3.0.2
debug1: Connecting to 10.0.2.15 [10.0.2.15] port 22.
debug1: connect to address 10.0.2.15 port 22: Connection timed out
ssh: connect to host 10.0.2.15 port 22: Connection timed out
#+END_SRC

#+BEGIN_SRC 
$ ssh -i .vagrant/machines/jo/virtualbox/private_key vagrant@172.20.99.101
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Permissions for '.vagrant/machines/jo/virtualbox/private_key' are too open.
It is required that your private key files are NOT accessible by others.
This private key will be ignored.
Load key ".vagrant/machines/jo/virtualbox/private_key": bad permissions
vagrant@172.20.99.101's password:
Last login: Fri Jul  8 04:55:52 2022 from 172.20.99.1

This system is built by the Bento project by Chef Software
More information can be found at https://github.com/chef/bento
[vagrant@jo ~]$
#+END_SRC

#+BEGIN_SRC 
$ vagrant ssh-config
Host jo
  HostName 127.0.0.1
  User vagrant
  Port 2222
  UserKnownHostsFile /dev/null
  StrictHostKeyChecking no
  PasswordAuthentication no
  IdentityFile T:/home/tmp/t-shell/ansible/workspace/.vagrant/machines/jo/virtualbox/private_key
  IdentitiesOnly yes
  LogLevel FATAL
#+END_SRC
* today
* DONE box

vagrant box list
vagrant box add hashicorp/bionic64

* TODO with vmware workstation player

vagrant up --provider vmware_desktop

https://www.vagrantup.com/docs/providers/vmware/vagrant-vmware-utility
Vagrant VMware Utility Installation

* TODO with virtualbox

** try 

$ vagrant init bento/centos-7.9
$ vagrant up --provider virtualbox
An active machine was found with a different provider. Vagrant
currently allows each machine to be brought up with only a single
provider at a time. A future version will remove this limitation.
Until then, please destroy the existing machine to up with a new
provider.

Machine name: default
Active provider: vmware_desktop
Requested provider: virtualbox

** TODO rmdir then again

$ vagrant init bento/centos-7.9
$ vagrant up --provider virtualbox

Detected CPU family 6 model 141 stepping 1
Warning: Intel Processor - this hardware has not undergone upstream testing.
Please consult http://wiki.centos.org/FAQ for more information

** so

rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org
yum install -y http://www.elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpm
yum install -y yum-utils
yum-config-manager --enable elrepo-kernel
yum remove -y kernel-{devel,tools,tools-libs}
yum install -y kernel-ml kernel-ml-{devel,tools,tools-libs} grub2-tools
yum install -y dkms gcc redhat-lsb-languages
grub2-mkconfig -o /boot/grub2/grub.cfg
grep vmlinuz /boot/grub2/grub.cfg
grub2-set-default 0

출처: https://ryusstory.tistory.com/entry/CentOS-7-등-리눅스-커널에서-스레드리퍼-지원-커널-업그레이드

로그는 없어졌지만, 멈춰있는 느낌이다.

SELinux: CONFIG_SECURITY_SELINUX_CHECKREQPROT_VALUE is non-zero.
This is deprecated and will be rejected in a future kernel release.
SELinux: https://github.com/SELinuxProject/selinux-kernel/wiki/DEPRECATE-checkreqprot
Spectre V2 : WARNING: Unprivileged eBPF is enabled with eIBRS on, data leaks possible via Spectre v2 BHB attacks!

멈춰 있는 느낌은 같다.

* samples

https://github.com/hashicorp/vagrant/issues/11432
