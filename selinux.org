* rhce > ex300, 20180414

** enable

#+BEGIN_EXAMPLE
getenforce
cat /etc/selinux/config
SELINUX=enforcing
reboot
#+END_EXAMPLE

** TODO port

#+BEGIN_SRC 
semanage port -a -t xx_t -p tcp 8999
semanage port -l
#+END_SRC

** with nfs, nil

* swap current mode online
  
- enforcing and permissiave

#+BEGIN_SRC 
getenforce
sestatus

setenforce 0 or setenforce Permissive
getenforce
sestatus

setenforce 1 or setenforce Enforcing
getenforce
sestatus
#+END_SRC

* config, /etc/selinux/config

SELINUX=enforcing
SELINUX=permissive

* so have to use it or

selinux 예전에 관련하여 책도 구매한 기억이 있다. 그런데 머리속에는 아무 것도 남지 않았다.

* cli to do allow

audit2allow -a

#+BEGIN_EXAMPLE
#============= crond_t ==============
allow crond_t file_t:lnk_file read;
allow crond_t init_t:dir search;
allow crond_t self:capability audit_control;

#============= crontab_t ==============
allow crontab_t auditd_log_t:dir getattr;
allow crontab_t file_t:lnk_file read;
allow crontab_t tmp_t:dir { create rmdir };
allow crontab_t tmpfs_t:dir search;
allow crontab_t user_home_dir_t:dir { write add_name };
allow crontab_t user_home_dir_t:file create;
allow crontab_t var_lib_t:dir search;
allow crontab_t var_lib_t:lnk_file read;
allow crontab_t var_log_t:dir search;
#+END_EXAMPLE

audit2allow -a -w
crontab -e
audit2allow -a -M EnableCrontabByRoot

#+BEGIN_EXAMPLE
$ file EnableCrontabByRoot.*
EnableCrontabByRoot.pp: SE Linux modular policy version 1, 1 sections, mod version 13, MLS, module name EnableCrontabByRoot\003
EnableCrontabByRoot.te: ASCII C++ program text
#+END_EXAMPLE

semodule -i EnableCrontabByRoot.pp

* TODO syslog and kern.log

#+BEGIN_EXAMPLE

Feb  4 08:41:13 precise64 kernel: [ 2635.254462] type=1400 audit(1486197673.355:201): avc:  denied  { unlink } for  
pid=24432 comm="rm" name="fcheck.out" dev=tmpfs ino=11766 
scontext=system_u:system_r:cronjob_t:s0-s0:c0.c255 
tcontext=system_u:object_r:tmpfs_t:s0 
tclass=file

#+END_EXAMPLE

#+BEGIN_EXAMPLE

Feb  4 09:21:12 precise64 kernel: [ 5033.966498] type=1400 audit(1486200072.071:217): avc:  denied  { read } for  
pid=31488 comm="crontab" name="run" dev=dm-0 ino=3801112 
scontext=unconfined_u:unconfined_r:crontab_t:s0-s0:c0.c255 
tcontext=system_u:object_r:file_t:s0 
tclass=lnk_file

Feb  4 09:21:12 precise64 kernel: [ 5033.994137] type=1400 audit(1486200072.099:218): avc:  denied  { create } for  
pid=31488 comm="crontab" name="crontab.dZll0N" 
scontext=unconfined_u:unconfined_r:crontab_t:s0-s0:c0.c255 
tcontext=unconfined_u:object_r:tmp_t:s0 
tclass=dir

#+END_EXAMPLE

* TODO so

- avc : cache, access vector cache

* TODO /etc/selinux/POLICYTYPE/*
* with nfs and kerberos

** server

1. wget -O /etc/krb5.keytab http://foo.com/keytabs/serverX.keytab
2. (added) /etc/sysconfig/nfs
   RPCNFSDARGS="-V 4.2"
3. systemctl start nfs-sercure-server
4. mkdir /securedexport
5. /etc/exports
   /etc/securedexport *.foo.com(sec=krb5p,rw)
6. exportfs -r
7. firewall-cmd --permanent --add-service=nfs
8. firewall-cmd --permanent --add-service=rpc-bind
9. firewall-cmd --permanent --add-service=mountd
10. firewall-cmd --reload

** client
1. wget -O /etc/krb5.keytab http://foo.com/keytabs/desktopX.keytab
1. yum install -y nfs-utils
2. systemctl enable nfs-secure
3. systemctl start nfs-secure
4. mkdir /mnt/securedexport
5. (opt) mount -o sec=krb5p serverX:/securedexport /mnt/securedexport
6. /etc/fstab
   serverX:/securedexport /mnt/securedexport nfs defaults,v4.2,sec=krb5p 0 0
   serverX:/securedexport /mnt/securedexport nfs defaults,vers=4.2,sec=krb5p 0 0
7. mount -a

** test

1. ssh ldapuser@desktopX
