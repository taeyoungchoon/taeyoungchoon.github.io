* human-life

#+BEGIN_SRC emacs-lisp

    '(t-life
      (t-loop
       (t-body 
        t-income
        t-stack
        t-lang
        (t-tool (emacs (perl lisp)))
        t-cook
        t-book
        t-think)))

#+END_SRC

* compute-yet

#+BEGIN_SRC emacs-lisp

  ' (t-compute
     (t-env
      (t-os
       (t-cpu :opt type)
       (t-memory :opt usage)
       (t-repo :type (das san nas))
       (t-kernel-log :aka t-dmesg)
       t-common-log
       (t-nameservice :aka t-ns)
       (t-network :aka t-ip)
       t-process)
      (t-state :aka t-manifest :opt status))) 

#+END_SRC

* infra

#+BEGIN_SRC emacs-lisp

  '(infra
    ((conn w1 w2 w3)
     (as as1 as2)
     (repo db1))

#+END_SRC

